{"version":3,"sources":["webpack:///./node_modules/@capacitor/haptics/dist/esm/web.js"],"names":["HapticsWeb","super","arguments","this","selectionStarted","options","pattern","patternForImpact","style","vibrateWithPattern","patternForNotification","type","duration","Heavy","Medium","Light","Success","Warning","Error","navigator","vibrate","unavailable"],"mappings":"kHAAA,8EAEO,MAAMA,UAAmB,OAC5B,cACIC,SAASC,WACTC,KAAKC,kBAAmB,EAE5B,aAAaC,GACT,MAAMC,EAAUH,KAAKI,iBAA6B,OAAZF,QAAgC,IAAZA,OAAqB,EAASA,EAAQG,OAChGL,KAAKM,mBAAmBH,GAE5B,mBAAmBD,GACf,MAAMC,EAAUH,KAAKO,uBAAmC,OAAZL,QAAgC,IAAZA,OAAqB,EAASA,EAAQM,MACtGR,KAAKM,mBAAmBH,GAE5B,cAAcD,GACV,MAAMO,GAAwB,OAAZP,QAAgC,IAAZA,OAAqB,EAASA,EAAQO,WAAa,IACzFT,KAAKM,mBAAmB,CAACG,IAE7B,uBACIT,KAAKC,kBAAmB,EAE5B,yBACQD,KAAKC,kBACLD,KAAKM,mBAAmB,CAAC,KAGjC,qBACIN,KAAKC,kBAAmB,EAE5B,iBAAiBI,EAAQ,OAAYK,OACjC,OAAIL,IAAU,OAAYM,OACf,CAAC,IAEHN,IAAU,OAAYO,MACpB,CAAC,IAEL,CAAC,IAEZ,uBAAuBJ,EAAO,OAAiBK,SAC3C,OAAIL,IAAS,OAAiBM,QACnB,CAAC,GAAI,GAAI,GAAI,GAAI,IAEnBN,IAAS,OAAiBO,MACxB,CAAC,GAAI,GAAI,IAEb,CAAC,GAAI,GAAI,IAEpB,mBAAmBZ,GACf,IAAIa,UAAUC,QAIV,MAAMjB,KAAKkB,YAAY,4CAHvBF,UAAUC,QAAQd","file":"js/chunk-2d0e8e3d.9a98662e.js","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport { ImpactStyle, NotificationType } from './definitions';\nexport class HapticsWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.selectionStarted = false;\n    }\n    async impact(options) {\n        const pattern = this.patternForImpact(options === null || options === void 0 ? void 0 : options.style);\n        this.vibrateWithPattern(pattern);\n    }\n    async notification(options) {\n        const pattern = this.patternForNotification(options === null || options === void 0 ? void 0 : options.type);\n        this.vibrateWithPattern(pattern);\n    }\n    async vibrate(options) {\n        const duration = (options === null || options === void 0 ? void 0 : options.duration) || 300;\n        this.vibrateWithPattern([duration]);\n    }\n    async selectionStart() {\n        this.selectionStarted = true;\n    }\n    async selectionChanged() {\n        if (this.selectionStarted) {\n            this.vibrateWithPattern([70]);\n        }\n    }\n    async selectionEnd() {\n        this.selectionStarted = false;\n    }\n    patternForImpact(style = ImpactStyle.Heavy) {\n        if (style === ImpactStyle.Medium) {\n            return [43];\n        }\n        else if (style === ImpactStyle.Light) {\n            return [20];\n        }\n        return [61];\n    }\n    patternForNotification(type = NotificationType.Success) {\n        if (type === NotificationType.Warning) {\n            return [30, 40, 30, 50, 60];\n        }\n        else if (type === NotificationType.Error) {\n            return [27, 45, 50];\n        }\n        return [35, 65, 21];\n    }\n    vibrateWithPattern(pattern) {\n        if (navigator.vibrate) {\n            navigator.vibrate(pattern);\n        }\n        else {\n            throw this.unavailable('Browser does not support the vibrate API');\n        }\n    }\n}\n//# sourceMappingURL=web.js.map"],"sourceRoot":""}